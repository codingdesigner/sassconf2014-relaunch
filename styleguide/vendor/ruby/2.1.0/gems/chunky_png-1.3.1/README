<!DOCTYPE html>
<html class="no-js">
<head>
  <title>SassConf</title>
  <meta charset="UTF-8">

  <!-- Mobile  Meta -->
  <meta name="viewport" content="width=device-width, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0"/>
  <meta name="HandheldFriendly" content="true">
  <meta name="MobileOptimized" content="width">
  <meta http-equiv="cleartype" content="on">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">

  <!-- Place favicon.ico and apple-touch-icon.png in the root directory -->
  <link rel="shortcut icon" href="images/ico/favicon.ico">

  <!-- Stylesheets -->
  <link href="/styleguide/public/css/style.css" rel="stylesheet" type="text/css" />
  <link rel="stylesheet" type="text/css" href="//cloud.typography.com/6578432/743904/css/fonts.css"/>



</head>
<body class="manhattan styleguide styleguide_vendor styleguide_vendor_ruby styleguide_vendor_ruby_2">
<header class="header">
  <div class="photo-wrapper"></div>
  <div class="rhombus-grid-wrapper layer">
    <svg class="rhombus-grid" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" viewBox="0 0 1000 420" enable-background="new 0 0 1000 420" xml:space="preserve" preserveAspectRatio="xMinYMin meet">
  <defs>
    <path id="rhombuses" d="M166.8 145.4H65.4L83.2 44h101.4L166.8 145.4zM307.2 44H205.8L188 145.4h101.4L307.2 44zM429.7 44H328.3l-17.9 101.4h101.4L429.7 44zM552.3 44H450.9l-17.9 101.4h101.4L552.3 44zM675.8 44H574.5l-17.9 101.4H658L675.8 44zM798.3 44H697l-17.9 101.4h101.4L798.3 44zM920.9 44H819.6l-17.9 101.4h101.4L920.9 44zM162.8 167.6H61.4L43.6 269H145L162.8 167.6zM285.4 167.6H184L166.2 269h101.4L285.4 167.6zM408 167.6H306.6L288.8 269h101.4L408 167.6zM530.6 167.6H429.2L411.4 269h101.3L530.6 167.6zM654 167.6H552.7L534.8 269h101.4L654 167.6zM776.6 167.6H675.3L657.4 269h101.4L776.6 167.6zM899.2 167.6H797.9L780 269h101.3L899.2 167.6zM141 291H39.6L21.8 392.4h101.4L141 291zM263.6 291H162.2l-17.9 101.4h101.4L263.6 291zM386.1 291H284.7l-17.9 101.4h101.4L386.1 291zM508.7 291H407.3l-17.9 101.4h101.4L508.7 291zM632.3 291H530.9L513 392.4h101.4L632.3 291zM754.8 291H653.4l-17.9 101.4h101.4L754.8 291zM877.3 291H776l-17.9 101.4h101.4L877.3 291z"></path>
  </defs>
  <clipPath id="nyc-image">
    <use xlink:href="#rhombuses" overflow="visible"></use>
  </clipPath>
  <g clip-path="url(#nyc-image)">
    <image overflow="visible" enable-background="new" width="1000" height="420" xlink:href="/styleguide/public/images/manhattan-zeldman-1800x756.jpg"></image>
  </g>
</svg>

  </div>
  <div class="logo-nav layer">
    <div class="logo-dates">
      <a href="/" class="logo-lockup logo-rhombus">
  <div class="rhombus-left">
    <div class="rhombus-left-reset">Sass Conf</div>
  </div>
</a>

      <h2 class="rhombus">
        <div class="rhombus-reset">October 2-4, 2014</div>
      </h2>
    </div>
  </div>
</header>


<div id="content">
  <nav class="m-main-nav">
  <label class="menu-button"><input type="checkbox">
    <a href="/"><div class="rhombus-reset">Home</div></a>
    <a href="/speakers"><div class="rhombus-reset">Speakers</div></a>
    <a href="/#buy-now"><div class="rhombus-reset">Get Tickets</div></a>
    <a href="/venue"><div class="rhombus-reset">Venue</div></a>
    <a href="/schedule"><div class="rhombus-reset">Schedule</div></a>
    <a href="/sponsors"><div class="rhombus-reset">Sponsors</div></a>
    <a href="/code-of-conduct"><div class="rhombus-reset">Code of Conduct</div></a>
    <div class="button"><div class="rhombus-reset">Menu</div></div>
  </label>
</nav>

  
<h1 id="label-Chunky+PNG+%3Cimg+src%3D%22https%3A%2F%2Ftravis-ci.org%2Fwvanbergen%2Fchunky_png.png%3Fbranch%3Dmaster%22+alt%3D%22Build+Status%22+%2F%3E">Chunky PNG <a href="https://travis-ci.org/wvanbergen/chunky_png"><img src="https://travis-ci.org/wvanbergen/chunky_png.png?branch=master" alt="Build Status" /></a><span><a href="#label-Chunky+PNG+%3Cimg+src%3D%22https%3A%2F%2Ftravis-ci.org%2Fwvanbergen%2Fchunky_png.png%3Fbranch%3Dmaster%22+alt%3D%22Build+Status%22+%2F%3E">&para;</a> <a href="#documentation">&uarr;</a></span></h1>

<p>This library can read and write PNG files. It is written in pure Ruby for
maximum portability. Let me rephrase: it does NOT require RMagick or any
other memory leaking image library.</p>
<dl class="rdoc-list note-list"><dt>Source code
<dd>
<p><a
href="http://github.com/wvanbergen/chunky_png/tree">github.com/wvanbergen/chunky_png/tree</a></p>
</dd><dt>RDoc
<dd>
<p><a
href="http://rdoc.info/gems/chunky_png/frames">rdoc.info/gems/chunky_png/frames</a></p>
</dd><dt>Wiki
<dd>
<p><a
href="http://github.com/wvanbergen/chunky_png/wiki">github.com/wvanbergen/chunky_png/wiki</a></p>
</dd><dt>Issue tracker
<dd>
<p><a
href="http://github.com/wvanbergen/chunky_png/issues">github.com/wvanbergen/chunky_png/issues</a></p>
</dd></dl>

<h2 id="label-Features">Features<span><a href="#label-Features">&para;</a> <a href="#documentation">&uarr;</a></span></h2>
<ul><li>
<p>Decodes any image that the PNG standard allows. This includes all standard
color modes, all bit depths and all transparency, interlacing and filtering
options.</p>
</li><li>
<p>Encodes images supports all color modes (true color, grayscale and indexed)
and transparency for all these color modes. The best color mode will be
chosen automatically, based on the amount of used colors.</p>
</li><li>
<p>R/W access to the image&#39;s pixels.</p>
</li><li>
<p>R/W access to all image metadata that is stored in chunks.</p>
</li><li>
<p>Memory efficient (uses a Fixnum, i.e. 4 or 8 bytes of memory per pixel,
depending on the hardware)</p>
</li><li>
<p>Reasonably fast for Ruby standards, by only using integer math and a highly
optimized saving routine.</p>
</li><li>
<p>Interoperability with RMagick if you really have to.</p>
</li></ul>

<p>Also, have a look at OilyPNG at <a
href="http://github.com/wvanbergen/oily_png">github.com/wvanbergen/oily_png</a>.
OilyPNG is a  mixin module that implements some of the ChunkyPNG algorithms
in C, which  provides a massive speed boost to encoding and decoding.</p>

<h2 id="label-Usage">Usage<span><a href="#label-Usage">&para;</a> <a href="#documentation">&uarr;</a></span></h2>

<pre class="ruby"><span class="ruby-identifier">require</span> <span class="ruby-string">&#39;chunky_png&#39;</span>

<span class="ruby-comment"># Creating an image from scratch, save as an interlaced PNG</span>
<span class="ruby-identifier">png</span> = <span class="ruby-constant">ChunkyPNG</span><span class="ruby-operator">::</span><span class="ruby-constant">Image</span>.<span class="ruby-identifier">new</span>(<span class="ruby-value">16</span>, <span class="ruby-value">16</span>, <span class="ruby-constant">ChunkyPNG</span><span class="ruby-operator">::</span><span class="ruby-constant">Color</span><span class="ruby-operator">::</span><span class="ruby-constant">TRANSPARENT</span>)
<span class="ruby-identifier">png</span>[<span class="ruby-value">1</span>,<span class="ruby-value">1</span>] = <span class="ruby-constant">ChunkyPNG</span><span class="ruby-operator">::</span><span class="ruby-constant">Color</span>.<span class="ruby-identifier">rgba</span>(<span class="ruby-value">10</span>, <span class="ruby-value">20</span>, <span class="ruby-value">30</span>, <span class="ruby-value">128</span>)
<span class="ruby-identifier">png</span>[<span class="ruby-value">2</span>,<span class="ruby-value">1</span>] = <span class="ruby-constant">ChunkyPNG</span><span class="ruby-operator">::</span><span class="ruby-constant">Color</span>(<span class="ruby-string">&#39;black @ 0.5&#39;</span>)
<span class="ruby-identifier">png</span>.<span class="ruby-identifier">save</span>(<span class="ruby-string">&#39;filename.png&#39;</span>, :<span class="ruby-identifier">interlace</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-keyword">true</span>)

<span class="ruby-comment"># Compose images using alpha blending.</span>
<span class="ruby-identifier">avatar</span> = <span class="ruby-constant">ChunkyPNG</span><span class="ruby-operator">::</span><span class="ruby-constant">Image</span>.<span class="ruby-identifier">from_file</span>(<span class="ruby-string">&#39;avatar.png&#39;</span>)
<span class="ruby-identifier">badge</span>  = <span class="ruby-constant">ChunkyPNG</span><span class="ruby-operator">::</span><span class="ruby-constant">Image</span>.<span class="ruby-identifier">from_file</span>(<span class="ruby-string">&#39;no_ie_badge.png&#39;</span>)
<span class="ruby-identifier">avatar</span>.<span class="ruby-identifier">compose!</span>(<span class="ruby-identifier">badge</span>, <span class="ruby-value">10</span>, <span class="ruby-value">10</span>)
<span class="ruby-identifier">avatar</span>.<span class="ruby-identifier">save</span>(<span class="ruby-string">&#39;composited.png&#39;</span>, :<span class="ruby-identifier">fast_rgba</span>) <span class="ruby-comment"># Force the fast saving routine.</span>

<span class="ruby-comment"># Accessing metadata</span>
<span class="ruby-identifier">image</span> = <span class="ruby-constant">ChunkyPNG</span><span class="ruby-operator">::</span><span class="ruby-constant">Image</span>.<span class="ruby-identifier">from_file</span>(<span class="ruby-string">&#39;with_metadata.png&#39;</span>)
<span class="ruby-identifier">puts</span> <span class="ruby-identifier">image</span>.<span class="ruby-identifier">metadata</span>[<span class="ruby-string">&#39;Title&#39;</span>]
<span class="ruby-identifier">image</span>.<span class="ruby-identifier">metadata</span>[<span class="ruby-string">&#39;Author&#39;</span>] = <span class="ruby-string">&#39;Willem van Bergen&#39;</span>
<span class="ruby-identifier">image</span>.<span class="ruby-identifier">save</span>(<span class="ruby-string">&#39;with_metadata.png&#39;</span>) <span class="ruby-comment"># Overwrite file</span>

<span class="ruby-comment"># Low level access to PNG chunks</span>
<span class="ruby-identifier">png_stream</span> = <span class="ruby-constant">ChunkyPNG</span><span class="ruby-operator">::</span><span class="ruby-constant">Datastream</span>.<span class="ruby-identifier">from_file</span>(<span class="ruby-string">&#39;filename.png&#39;</span>)
<span class="ruby-identifier">png_stream</span>.<span class="ruby-identifier">each_chunk</span> { <span class="ruby-operator">|</span><span class="ruby-identifier">chunk</span><span class="ruby-operator">|</span> <span class="ruby-identifier">p</span> <span class="ruby-identifier">chunk</span>.<span class="ruby-identifier">type</span> }
</pre>

<p>Also check out the following screencast by John Davison, which illustrates 
basic usage of the library: <a
href="http://devcasts.co/ruby-chunky_png-a-great-gem-for-on-the-fly-png-manipulation">devcasts.co/ruby-chunky_png-a-great-gem-for-on-the-fly-png-manipulation</a>.</p>

<p>For more information, see the project wiki on <a
href="http://github.com/wvanbergen/chunky_png/wiki">github.com/wvanbergen/chunky_png/wiki</a>
or the RDOC documentation on <a
href="http://rdoc.info/gems/chunky_png/frames">rdoc.info/gems/chunky_png/frames</a></p>

<h2 id="label-Security+warning">Security warning<span><a href="#label-Security+warning">&para;</a> <a href="#documentation">&uarr;</a></span></h2>

<p>ChunkyPNG is vulnerable to decompression bombs, which means that ChunkyPNG
is vulnerable to  DOS attacks by running out of memory when loading a
specifically crafted PNG file. Because  of the pure-Ruby nature of the
library it is very hard to fix this problem in the library  itself.</p>

<p>In order to safely deal with untrusted images, you should make sure to do
the image  processing using ChunkyPNG in a separate process, e.g. by using
fork or a background processing library.</p>

<h2 id="label-About">About<span><a href="#label-About">&para;</a> <a href="#documentation">&uarr;</a></span></h2>

<p>The library is written by Willem van Bergen for Floorplanner.com, and
released under the MIT license (see LICENSE). Please contact me for
questions or remarks. Patches are greatly appreciated!</p>

<p>Please check out the changelog on <a
href="https://github.com/wvanbergen/chunky_png/wiki/Changelog">github.com/wvanbergen/chunky_png/wiki/Changelog</a>
to see what changed in all versions.</p>

<p>P.S.: The name of this library is intentionally similar to Chunky Bacon and
Chunky GIF. Use Google if you want to know _why. :-)</p>

</div>
<footer>
  <div class="footer-content">
    <div class="logo-lockup"></div>


    <ul>
      <h4>2014 SassConf Team</h4>
      <li><a href="https://twitter.com/itsmisscs">Claudina Sarahe</a></li>
      <li><a href="https://twitter.com/Snugug">Sam Richard</a></li>
      <li><a href="https://twitter.com/adekunleoduye">Adekunle Oduye</a></li>
      <li><a href="https://twitter.com/bkrjames">Robert James</a></li>
      <li><a href="https://twitter.com/skyefaerie">Aisha Green</a></li>
      <li>Michelle Martinez</li>
      <li><a href="https://twitter.com/codingdesigner">Mason Wendell</a></li>
    </ul>

    <ul>
      <h4>Stay in touch</h4>
      <li><a href="https://twitter.com/sassconf">@SassConf</a></li>
      <li><a href="mailto:info@Sassconf.com">info@Sassconf.com</a></li>
    </ul>

    <p>&copy; 2014 SassConf. All rights reserved. Find an error or want to add something? Pull requests
      are welcome over on <a href="https://github.com/codingdesigner/sassconf-pl"
                             title="SassConf Design repo">GitHub</a>.
      Kindly refer to our <a href="/styleguide/public/">styleguide</a>.</p>

    <p>Manhattan <a
        href="https://www.flickr.com/photos/zeldman/14275183690/in/photolist-nKs4nU-nKs3LJ-o2QM7u-nZU5Jb">photo by
      Jeffery Zeldman</a>.</p>

    <p>
      SassConf is dedicated to a
      <a href="/code-of-conduct">harassment-free</a>
      and enjoyable conference experience for everyone.
      <a href="/refund-policy">Refund policy</a>.
    </p>
  </div>
</footer>



<!-- Stylesheets -->
<script src="/javascripts/bower_components/modernizr/modernizr.js" type="text/javascript"></script><script src="/javascripts/bower_components/jquery/dist/jquery.js" type="text/javascript"></script><script src="/javascripts/bower_components/eq.js/dist/eq.min.js" type="text/javascript"></script><script src="/javascripts/bower_components/moment/moment.js" type="text/javascript"></script><script src="/javascripts/bower_components/twix/bin/twix.js" type="text/javascript"></script>


<!--[if lt IE 9]>
<script src="/javascripts/bower_components/html5shiv/dist/html5shiv.js" type="text/javascript"></script>
<![endif]-->
<script src="/javascripts/widowtamer-min.js" type="text/javascript"></script><script src="/javascripts/bower_components/letteringjs/jquery.lettering.js" type="text/javascript"></script><script src="/javascripts/main.js" type="text/javascript"></script>

</body>
</html>
